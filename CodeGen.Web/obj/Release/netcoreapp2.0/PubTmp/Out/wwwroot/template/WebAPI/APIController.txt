[Route("#RoutePrefix"), Produces("application/json")]
public class #APiController : Controller
{
    private dbContext _ctx = null;
    public #APiController(dbContext context)
    {
        _ctx = context;
    }

    // GET: #UrlApiGet
    [HttpGet, Route("GetAll")]
    public async Task<object> GetAll()
    {
        #Collection #ListObj = null;
        try
        {
            using (_ctx)
            {
                #ListObj = await #DbMethod;
            }
        }
        catch (Exception ex)
        {
            ex.ToString();
        }
        return #ListObj;
    }

    // GET #UrlGetByID
    [HttpGet, Route("GetByID/{id}")]
    public async Task<#Entity> GetByID(int id)
    {
        #Entity object = null;
        try
        {
            using (_ctx)
            {
                object = await _ctx.#Entity.FirstOrDefaultAsync(x => x.Id == id);
            }
        }
        catch (Exception ex)
        {
            ex.ToString();
        }
        return object;
    }


    // POST #UrlPostByID 
    [HttpPost, Route("Save")]
    public async Task<object> Save([FromBody]#Entity model)
    {
        object result = null; string message = "";
        if (model == null)
        {
            return BadRequest();
        }
        using (_ctx)
        {
            using (var _ctxTransaction = _ctx.Database.BeginTransaction())
            {
                try
                {
                    _ctx.#Entity.Add(model);
                    await _ctx.SaveChangesAsync();
                    _ctxTransaction.Commit();
                    message = "Ok";
                }
                catch (Exception e)
                {
                    _ctxTransaction.Rollback();
                    e.ToString();
                    message = "Error";
                }

                result = new
                {
                    message
                };
            }
        }
        return result;
    }

    // PUT #UrlApiPut 
    [HttpPut, Route("UpdateByID/{id}")]
    public async Task<object> UpdateByID(int id, [FromBody]#Entity model)
    {
        object result = null; string message = string.Empty;
        if (model == null)
        {
            return BadRequest();
        }
        using (_ctx)
        {
            using (var _ctxTransaction = _ctx.Database.BeginTransaction())
            {
                try
                {
                    var entityUpdate = _ctx.#Entity.FirstOrDefault(x => x.Id == id);
                    if (entityUpdate != null)
                    {
                        #ColUpdate

                        await _ctx.SaveChangesAsync();
                    }
                    _ctxTransaction.Commit();
                    message = "Ok";
                }
                catch (Exception e)
                {
                    _ctxTransaction.Rollback(); e.ToString();
                    message = "Error";
                }

                result = new
                {
                    message
                };
            }
        }
        return result;
    }

    // DELETE #UrlDeleteByID
    [HttpDelete, Route("DeleteByID/{id}")]
    public async Task<object> DeleteByID(int id)
    {
        object result = null; string message = "";
        using (_ctx)
        {
            using (var _ctxTransaction = _ctx.Database.BeginTransaction())
            {
                try
                {
                    var idToRemove = _ctx.#Entity.SingleOrDefault(x => x.Id == id);
                    if (idToRemove != null)
                    {
                        _ctx.#Entity.Remove(idToRemove);
                        await _ctx.SaveChangesAsync();
                    }
                    _ctxTransaction.Commit();
                    message = "Ok";
                }
                catch (Exception e)
                {
                    _ctxTransaction.Rollback(); 
					e.ToString();
                    message = "Error";
                }

                result = new
                {
                    message
                };
            }
        }
        return result;
    }
}